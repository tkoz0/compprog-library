#include <cstdint>
#include <type_traits>

template <uint64_t i, uint64_t j> struct _permutations_mulseq { static constexpr uint64_t value = i * _permutations_mulseq<i-1,j>::value; };
template <uint64_t i> struct _permutations_mulseq<i,i> { static constexpr uint64_t value = 1; };
template <uint64_t n, uint64_t k> struct permutations { static constexpr uint64_t value = std::conditional<(k>n),std::integral_constant<uint64_t,0>,_permutations_mulseq<n,n-k>>::type::value; };
template <uint64_t n, uint64_t k> static constexpr uint64_t permutations_v = permutations<n,k>::value;

static_assert(permutations_v<0,0> == 1);
static_assert(permutations_v<0,1> == 0);
static_assert(permutations_v<0,2> == 0);
static_assert(permutations_v<0,3> == 0);
static_assert(permutations_v<0,4> == 0);
static_assert(permutations_v<0,5> == 0);
static_assert(permutations_v<0,6> == 0);
static_assert(permutations_v<0,7> == 0);
static_assert(permutations_v<0,8> == 0);
static_assert(permutations_v<0,9> == 0);
static_assert(permutations_v<1,0> == 1);
static_assert(permutations_v<1,1> == 1);
static_assert(permutations_v<1,2> == 0);
static_assert(permutations_v<1,3> == 0);
static_assert(permutations_v<1,4> == 0);
static_assert(permutations_v<1,5> == 0);
static_assert(permutations_v<1,6> == 0);
static_assert(permutations_v<1,7> == 0);
static_assert(permutations_v<1,8> == 0);
static_assert(permutations_v<1,9> == 0);
static_assert(permutations_v<2,0> == 1);
static_assert(permutations_v<2,1> == 2);
static_assert(permutations_v<2,2> == 2);
static_assert(permutations_v<2,3> == 0);
static_assert(permutations_v<2,4> == 0);
static_assert(permutations_v<2,5> == 0);
static_assert(permutations_v<2,6> == 0);
static_assert(permutations_v<2,7> == 0);
static_assert(permutations_v<2,8> == 0);
static_assert(permutations_v<2,9> == 0);
static_assert(permutations_v<3,0> == 1);
static_assert(permutations_v<3,1> == 3);
static_assert(permutations_v<3,2> == 6);
static_assert(permutations_v<3,3> == 6);
static_assert(permutations_v<3,4> == 0);
static_assert(permutations_v<3,5> == 0);
static_assert(permutations_v<3,6> == 0);
static_assert(permutations_v<3,7> == 0);
static_assert(permutations_v<3,8> == 0);
static_assert(permutations_v<3,9> == 0);
static_assert(permutations_v<4,0> == 1);
static_assert(permutations_v<4,1> == 4);
static_assert(permutations_v<4,2> == 12);
static_assert(permutations_v<4,3> == 24);
static_assert(permutations_v<4,4> == 24);
static_assert(permutations_v<4,5> == 0);
static_assert(permutations_v<4,6> == 0);
static_assert(permutations_v<4,7> == 0);
static_assert(permutations_v<4,8> == 0);
static_assert(permutations_v<4,9> == 0);
static_assert(permutations_v<5,0> == 1);
static_assert(permutations_v<5,1> == 5);
static_assert(permutations_v<5,2> == 20);
static_assert(permutations_v<5,3> == 60);
static_assert(permutations_v<5,4> == 120);
static_assert(permutations_v<5,5> == 120);
static_assert(permutations_v<5,6> == 0);
static_assert(permutations_v<5,7> == 0);
static_assert(permutations_v<5,8> == 0);
static_assert(permutations_v<5,9> == 0);
static_assert(permutations_v<6,0> == 1);
static_assert(permutations_v<6,1> == 6);
static_assert(permutations_v<6,2> == 30);
static_assert(permutations_v<6,3> == 120);
static_assert(permutations_v<6,4> == 360);
static_assert(permutations_v<6,5> == 720);
static_assert(permutations_v<6,6> == 720);
static_assert(permutations_v<6,7> == 0);
static_assert(permutations_v<6,8> == 0);
static_assert(permutations_v<6,9> == 0);
static_assert(permutations_v<7,0> == 1);
static_assert(permutations_v<7,1> == 7);
static_assert(permutations_v<7,2> == 42);
static_assert(permutations_v<7,3> == 210);
static_assert(permutations_v<7,4> == 840);
static_assert(permutations_v<7,5> == 2520);
static_assert(permutations_v<7,6> == 5040);
static_assert(permutations_v<7,7> == 5040);
static_assert(permutations_v<7,8> == 0);
static_assert(permutations_v<7,9> == 0);
static_assert(permutations_v<8,0> == 1);
static_assert(permutations_v<8,1> == 8);
static_assert(permutations_v<8,2> == 56);
static_assert(permutations_v<8,3> == 336);
static_assert(permutations_v<8,4> == 1680);
static_assert(permutations_v<8,5> == 6720);
static_assert(permutations_v<8,6> == 20160);
static_assert(permutations_v<8,7> == 40320);
static_assert(permutations_v<8,8> == 40320);
static_assert(permutations_v<8,9> == 0);
static_assert(permutations_v<9,0> == 1);
static_assert(permutations_v<9,1> == 9);
static_assert(permutations_v<9,2> == 72);
static_assert(permutations_v<9,3> == 504);
static_assert(permutations_v<9,4> == 3024);
static_assert(permutations_v<9,5> == 15120);
static_assert(permutations_v<9,6> == 60480);
static_assert(permutations_v<9,7> == 181440);
static_assert(permutations_v<9,8> == 362880);
static_assert(permutations_v<9,9> == 362880);
