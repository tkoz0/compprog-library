#include <cstdint>

template <uint64_t n> struct fibonacci { static constexpr uint64_t _prev = fibonacci<n-1>::value; static constexpr uint64_t value = _prev + fibonacci<n-1>::_prev; };
template <> struct fibonacci<0> { static constexpr uint64_t value = 0; };
template <> struct fibonacci<1> { static constexpr uint64_t _prev = 0; static constexpr uint64_t value = 1; };
template <uint64_t n> static constexpr uint64_t fibonacci_v = fibonacci<n>::value;

static_assert(fibonacci_v<0> == 0ull);
static_assert(fibonacci_v<1> == 1ull);
static_assert(fibonacci_v<2> == 1ull);
static_assert(fibonacci_v<3> == 2ull);
static_assert(fibonacci_v<4> == 3ull);
static_assert(fibonacci_v<5> == 5ull);
static_assert(fibonacci_v<6> == 8ull);
static_assert(fibonacci_v<7> == 13ull);
static_assert(fibonacci_v<8> == 21ull);
static_assert(fibonacci_v<9> == 34ull);
static_assert(fibonacci_v<10> == 55ull);
static_assert(fibonacci_v<11> == 89ull);
static_assert(fibonacci_v<12> == 144ull);
static_assert(fibonacci_v<13> == 233ull);
static_assert(fibonacci_v<14> == 377ull);
static_assert(fibonacci_v<15> == 610ull);
static_assert(fibonacci_v<16> == 987ull);
static_assert(fibonacci_v<17> == 1597ull);
static_assert(fibonacci_v<18> == 2584ull);
static_assert(fibonacci_v<19> == 4181ull);
static_assert(fibonacci_v<20> == 6765ull);
static_assert(fibonacci_v<21> == 10946ull);
static_assert(fibonacci_v<22> == 17711ull);
static_assert(fibonacci_v<23> == 28657ull);
static_assert(fibonacci_v<24> == 46368ull);
static_assert(fibonacci_v<25> == 75025ull);
static_assert(fibonacci_v<26> == 121393ull);
static_assert(fibonacci_v<27> == 196418ull);
static_assert(fibonacci_v<28> == 317811ull);
static_assert(fibonacci_v<29> == 514229ull);
static_assert(fibonacci_v<30> == 832040ull);
static_assert(fibonacci_v<31> == 1346269ull);
static_assert(fibonacci_v<32> == 2178309ull);
static_assert(fibonacci_v<33> == 3524578ull);
static_assert(fibonacci_v<34> == 5702887ull);
static_assert(fibonacci_v<35> == 9227465ull);
static_assert(fibonacci_v<36> == 14930352ull);
static_assert(fibonacci_v<37> == 24157817ull);
static_assert(fibonacci_v<38> == 39088169ull);
static_assert(fibonacci_v<39> == 63245986ull);
static_assert(fibonacci_v<40> == 102334155ull);
static_assert(fibonacci_v<41> == 165580141ull);
static_assert(fibonacci_v<42> == 267914296ull);
static_assert(fibonacci_v<43> == 433494437ull);
static_assert(fibonacci_v<44> == 701408733ull);
static_assert(fibonacci_v<45> == 1134903170ull);
static_assert(fibonacci_v<46> == 1836311903ull);
static_assert(fibonacci_v<47> == 2971215073ull);
static_assert(fibonacci_v<48> == 4807526976ull);
static_assert(fibonacci_v<49> == 7778742049ull);
static_assert(fibonacci_v<50> == 12586269025ull);
static_assert(fibonacci_v<51> == 20365011074ull);
static_assert(fibonacci_v<52> == 32951280099ull);
static_assert(fibonacci_v<53> == 53316291173ull);
static_assert(fibonacci_v<54> == 86267571272ull);
static_assert(fibonacci_v<55> == 139583862445ull);
static_assert(fibonacci_v<56> == 225851433717ull);
static_assert(fibonacci_v<57> == 365435296162ull);
static_assert(fibonacci_v<58> == 591286729879ull);
static_assert(fibonacci_v<59> == 956722026041ull);
static_assert(fibonacci_v<60> == 1548008755920ull);
static_assert(fibonacci_v<61> == 2504730781961ull);
static_assert(fibonacci_v<62> == 4052739537881ull);
static_assert(fibonacci_v<63> == 6557470319842ull);
static_assert(fibonacci_v<64> == 10610209857723ull);
static_assert(fibonacci_v<65> == 17167680177565ull);
static_assert(fibonacci_v<66> == 27777890035288ull);
static_assert(fibonacci_v<67> == 44945570212853ull);
static_assert(fibonacci_v<68> == 72723460248141ull);
static_assert(fibonacci_v<69> == 117669030460994ull);
static_assert(fibonacci_v<70> == 190392490709135ull);
static_assert(fibonacci_v<71> == 308061521170129ull);
static_assert(fibonacci_v<72> == 498454011879264ull);
static_assert(fibonacci_v<73> == 806515533049393ull);
static_assert(fibonacci_v<74> == 1304969544928657ull);
static_assert(fibonacci_v<75> == 2111485077978050ull);
static_assert(fibonacci_v<76> == 3416454622906707ull);
static_assert(fibonacci_v<77> == 5527939700884757ull);
static_assert(fibonacci_v<78> == 8944394323791464ull);
static_assert(fibonacci_v<79> == 14472334024676221ull);
static_assert(fibonacci_v<80> == 23416728348467685ull);
static_assert(fibonacci_v<81> == 37889062373143906ull);
static_assert(fibonacci_v<82> == 61305790721611591ull);
static_assert(fibonacci_v<83> == 99194853094755497ull);
static_assert(fibonacci_v<84> == 160500643816367088ull);
static_assert(fibonacci_v<85> == 259695496911122585ull);
static_assert(fibonacci_v<86> == 420196140727489673ull);
static_assert(fibonacci_v<87> == 679891637638612258ull);
static_assert(fibonacci_v<88> == 1100087778366101931ull);
static_assert(fibonacci_v<89> == 1779979416004714189ull);
static_assert(fibonacci_v<90> == 2880067194370816120ull);
static_assert(fibonacci_v<91> == 4660046610375530309ull);
static_assert(fibonacci_v<92> == 7540113804746346429ull);
static_assert(fibonacci_v<93> == 12200160415121876738ull);
